ใน view มี 
	view.java 		- ทำหน้าที่เป็น gui ให้ user เข้ามาป้อนข้อมูลตาม requirement และกด submit เพื่อยืนยันการกระทำของ user
	table.java 	- ทำหน้าที่เป็น table ที่แสดงข้อมูลตาราง log ย้อนหลัง 10 อันดับที่ไล่ตามอุณหภูมิสูงสุดลงไปต่ำสุด
ใน control มี
	control.java 	- ทำหน้าที่เป็นเหมือน traffic ของระบบในการ participate ระหว่างข้อมูลที่รับเข้ามาหน้า gui จาก view.java 
				ไปทำงานใน model.java
ใน model มี
	model.java 	- ทำหน้าที่ในการคำนวน logic ตาม requirement เรื่องของอุณหภูมิ กับ ข้อมูลที่ได้รับเข้ามาและ บันทึก log ลง database ใน
				การเรียกดูย้อนหลังได้
ภาพรวมระบบ :
	view จะรับ input student id และ temperature เพื่อส่งไปให้ control, จากนั้น control จะเรียกใช้ model ในการ set ค่า input ทั้ง 2 และ
เรียกใช้การตรวจสอบ logic ของอุณหภูมิว่าตรงตามกฏหรือไม่ โดยจะบันทึกผลที่ได้เป็น high, low, normal และจัดเก็บ log ข้อมูลในการทำงานทั้งหมด
ลง database โดยให้ student id เป็น primary key เพื่อป้องกันการเกิดการทำงานซ้ำของหน้าบ้าน gui (view) และจะส่งค่า status กลับคืนไปยัง control
และ control จะส่งค่าคืนไปยัง view เพื่อเป็นการ respond ว่า action ที่ user ทำไปนั้นมัน complete หรือ fail (ว่าด้วยเงื่อนไขของ fail ที่จะเกิดคือ 
กรอกซ้ำ) นอกจากนั้นใน view จะมี button ให้ user เรียกใช้ดูข้อมูลในตารางโดย จะเรียกการทำงานของ table และ table จะสร้างตารางโดยกำกับหัว
ตารางตามหัวตารางข้อมูลใน mysql database และจะเรียกใช้การดึงข้อมูลไปยัง control เพื่อให้ control เรียก model ในการดึงข้อมูลใน database 
มาจัดระเบียบไม่เกิน 10 อันดับ ไล่จากมากไปน้อยให้ user ดู (ในตารางที่แสดงให้เห็นจะเห็น 10 อันดับ แต่ใน database จะมีครบทั้งหมดไม่ได้ตัดข้อมูล
ออก) และคืนค่าข้อมูลตารางไปยัง control และ control จะคืนไปที่ gui table อีกทีเพื่อ port ข้อมูลลงตารางและแสดงออกมาให้ user เห็น